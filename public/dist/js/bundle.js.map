{"version":3,"sources":["app.js","artist/artistController.js","artist/artistService.js","login/authController.js","login/loginController.js","login/loginService.js","recommendations/animations.js","recommendations/filter.js","recommendations/recommendationController.js","recommendations/service.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$cookiesProvider","defaults","path","$scope","$stateParams","artistService","spotifyService","artistId","id","getArtistInfo","then","result","artistInfo","console","log","follow","followArtist","unfollow","unfollowArtist","saveSong","saveTrack","removeSong","removeTrack","service","$http","$q","loginService","token","getToken","defer","artistID","headers","method","genres","data","popularity","name","i","images","length","height","width","image","res","alreadyFollowing","response","topTracks","tracks","forEach","track","checkIfSongSaved","alreadySaved","r","albumArr","items","album_type","push","albums","x","getTracksOnAlbum","resolve","promise","index","trackList","$cookies","window","location","hash","substr","elems","split","setToken","setTimeout","redirect_uri","authorize","resp","client_id","isLoggedIn","encodeURIComponent","now","Date","time","getTime","setTime","put","get","filter","$sce","val","trustAsResourceUrl","getRecommendations","getRecs","artistName","songName","genreName","recs","recommendations","artist","song","genre","songInfo","deferred","search","songRes","artistRes","recommendationsWithInfo","recArray","rec","info","searchTerm","type","encodeURI","uri","shorten","artists","albumImg","album","preview","preview_url","getInfo","acoutsticness","danceability","energy","instrumentalness","key","tempo","checkIfAlreadySaved","songID","acousticness","str","arr","join"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('spotifyApp', ['ngCookies', 'ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        //search state\n        $stateProvider.state('recommendations', {\n                url: '/recommendations',\n                templateUrl: '/components/recommendations/recommendTmpl.html',\n                controller: 'recommendationController'\n            })\n            //login state\n            .state('login', {\n                url: '/',\n                templateUrl: '/components/login/login.html',\n                controller: 'loginController'\n            })\n\n            .state('artist', {\n                url:'/artist/:id',\n                templateUrl: '/components/artist/artistTmpl.html',\n                controller: 'artistController'\n            });\n        $urlRouterProvider.otherwise('/');\n\n    }).config(['$cookiesProvider', function($cookiesProvider) {\n        //makes token accessible for the whole app\n        $cookiesProvider.defaults.path = '/';\n    }]);\n","angular.module('spotifyApp').controller('artistController', function($scope, $stateParams, artistService, spotifyService){\n  $scope.artistId = $stateParams.id;\n\n  //gets artist info\n  artistService.getArtistInfo($scope.artistId).then(function(result){\n      $scope.artistInfo = result;\n      console.log($scope.artistInfo);\n  });\n\n  //follows artist\n  $scope.follow = function(){\n      artistService.followArtist($scope.artistId);\n  };\n\n\n  //unfollows artist\n  $scope.unfollow = function(){\n      artistService.unfollowArtist($scope.artistId);\n  };\n\n  //saves song to user's library\n  $scope.saveSong = function(id){\n      spotifyService.saveTrack(id);\n  };\n\n  //removes saved song from user's library\n  $scope.removeSong = function(id){\n      spotifyService.removeTrack(id);\n  };\n\n});\n","angular.module('spotifyApp').service('artistService', function($http, $q, loginService) {\n    var token = loginService.getToken();\n    var artistInfo = {};\n    //gets artist info from spotify\n    this.getArtistInfo = function(id) {\n        //gets basic artist info\n        var defer = $q.defer();\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/artists/' + id\n        }).then(function(result) {\n            artistInfo.genres = result.data.genres;\n            artistInfo.popularity = result.data.popularity;\n            artistInfo.name = result.data.name;\n            //gets biggest square image\n            for (var i = result.data.images.length - 1; i >= 0; i--) {\n                if (result.data.images[i].height === result.data.images[i].width) {\n                    artistInfo.image = result.data.images[i];\n                }\n            }\n            artistInfo.image = result.data.images[1];\n        }).then(function() {\n            //gets if a user follows an artist\n            $http({\n                headers: {\n                    \"Authorization\": 'Bearer ' + token\n                },\n                method: 'GET',\n                url: 'https://api.spotify.com/v1/me/following/contains?type=artist&ids=' + artistID\n            }).then(function(res) {\n                artistInfo.alreadyFollowing = res.data[0];\n            }).then(function() {\n                //gets an artist's top tracks\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/artists/' + artistID + '/top-tracks?country=US'\n                }).then(function(response) {\n                    artistInfo.topTracks = response.data.tracks;\n                    artistInfo.topTracks.forEach(function(track){\n                      //checks if a user already\n                      checkIfSongSaved(track.id).then(function(result){\n                        track.alreadySaved = result.data[0];\n                      });\n                    });\n                }).then(function() {\n                    //gets an artist's albums\n                    $http({\n                        headers: {\n                            \"Authorization\": 'Bearer ' + token\n                        },\n                        method: 'GET',\n                        url: 'https://api.spotify.com/v1/artists/' + artistID + '/albums?country=US'\n                    }).then(function(r) {\n                        // console.log(r);\n                        var albumArr = [];\n                        //filters out singles and compilations\n                        for(var i = 0; i < r.data.items.length; i++){\n                            if(r.data.items[i].album_type === 'album'){\n                              albumArr.push(r.data.items[i]);\n                            }\n                        }\n                        artistInfo.albums = albumArr;\n                        console.log(artistInfo.albums);\n                        //request to get all tracks from each album\n                        for(var x = 0; x < artistInfo.albums.length; x++){\n                          getTracksOnAlbum(artistInfo.albums[x].id, x);\n                        }\n\n                        //if there were no sqaure images from the artist\n                        //profile, it sets the artists most recent album as\n                        //the profile photo.\n                        if (!artistInfo.image) {\n                            artistInfo.image = r.data.items[0].images[0];\n                        }\n                    });\n                });\n            });\n        });\n        defer.resolve(artistInfo);\n        // console.log(artistInfo);\n        return defer.promise;\n    };\n\n    //follows artist with given id\n    this.followArtist = function(id) {\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            //console.log(res);\n        });\n    };\n\n    //unfollows artist with given id\n    this.unfollowArtist = function(id) {\n        var artistID = id;\n        // console.log(`artistID ${artistID}`);\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'DELETE',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            //console.log(res);\n        });\n    };\n\n    //checks if a song is already saved to a user's library\n    var checkIfSongSaved = function(id){\n      var artistID = id;\n      return $http({\n        headers: {\n            \"Authorization\": 'Bearer ' + token\n        },\n        method:'GET',\n        url:'https://api.spotify.com/v1/me/tracks/contains?ids=' + artistID\n      });\n    };\n\n    //gets tracks on album with given id, made it a separate\n    //function to break scope\n    var getTracksOnAlbum = function(id, index){\n      var artistID = id;\n      $http({\n        headers: {\n            \"Authorization\": 'Bearer ' + token\n        },\n        method:'GET',\n        url:'https://api.spotify.com/v1/albums/' + artistID\n      }).then(function(trackList){\n        artistInfo.albums[index].tracks = trackList.data.tracks;\n      });\n    };\n\n});\n","angular.module('spotifyApp').controller('authController', function($scope, loginService, $cookies) {\n\n    //method to extract token from redirect url\n    $scope.getToken = function() {\n        var url = window.location.hash.substr(1);\n        var elems = url.split('=');\n        console.log(elems);\n        console.log(elems[1].split('&'));\n        $scope.token = (elems[1]);\n    };\n\n    //gets token from url\n    $scope.getToken();\n\n    //sets token\n    loginService.setToken($scope.token);\n\n    //redirects home after 1s\n    setTimeout(function() {\n        window.location = 'http://localhost:8080/#/search';\n    }, 1000);\n\n});\n","angular.module('spotifyApp').controller('loginController', function($scope, loginService) {\n    var redirect_uri = 'http://localhost:8080/components/login/afterAuth.html';\n    //redirects to spotify permission request\n    $scope.authorize = function() {\n        loginService.authorize().then(function(resp) {\n            window.location = \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\";\n        });\n    };\n    loginService.getToken();\n    $scope.isLoggedIn = loginService.isLoggedIn;\n    if($scope.isLoggedIn){\n      window.location = \"http://localhost:8080/#/recommendations\";\n    }\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/components/login/afterAuth.html');\n\nangular.module('spotifyApp').service('loginService', function($cookies, $http) {\n    this.isLoggedIn = false;\n    //requests auth token from spotify\n    this.authorize = function() {\n        return $http({\n            method: 'GET',\n            url: \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\"\n        });\n    };\n\n    //save token to a cookie that expires in 1hr\n    this.setToken = function(token){\n      var now = new Date();\n      var time = now.getTime();\n      time += 3600 * 1000;\n      now.setTime(time);\n      $cookies.put('token', token, {'expires': now});\n      console.log(token);\n      this.token = token;\n      this.isLoggedIn = true;\n    };\n\n    //gets token from a cookie\n    this.getToken = function() {\n        var token = $cookies.get('token');\n        console.log(token);\n        if(token){\n          this.isLoggedIn = true;\n        }else{\n          this.isLoggedIn = false;\n        }\n        return token;\n    };\n});\n","","//filter to make iframes work with dynamic urls (for the spotify web player)\nangular.module('spotifyApp').filter('trustAsResourceUrl', ['$sce', function($sce) {\n    return function(val) {\n        return $sce.trustAsResourceUrl(val);\n    };\n}]);\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').controller('recommendationController', function($scope, spotifyService, loginService) {\n\n    //gets token from saved coookie\n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n\n    //gets saved token when page is loaded\n    $scope.getToken();\n\n    //gets recommendations based on seeds\n    $scope.getRecommendations = function() {\n        spotifyService.getRecs($scope.artistName, $scope.songName, $scope.genreName).then(function(recs) {\n            console.log(recs);\n            $scope.recommendations = recs.data;\n        });\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n\n    //removes song from user's library\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id);\n    };\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').service('spotifyService', function($http, $q, $cookies, loginService) {\n    //looks up ids of provided elements and\n    //gets recommendations accordingly\n    var token;\n    this.getRecs = function(artist, song, genre) {\n        token = loginService.getToken();\n        console.log(artist + \" \" + song + \" \" + genre);\n        var songInfo;\n        var artistInfo;\n        var deferred = $q.defer();\n\n        //gets track ID and info\n        search(song, \"track\").then(function(songRes) {\n            songInfo = songRes;\n            //gets artist ID and info\n            search(artist, \"artist\").then(function(artistRes) {\n                artistInfo = artistRes;\n                //gets recommendations\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/recommendations?seed_tracks=' + songInfo.id + '&seed_artists=' + artistInfo.id + '&seed_genres=' + genre\n                }).then(function(response) {\n                    var recommendationsWithInfo = {};\n                    console.log(response);\n                    //array of recommendations with info about each one\n                    var recArray = [];\n                    var recommendations = response.data.tracks;\n                    recommendations.forEach(function(rec) {\n                        var name = rec.name;\n                        search(name, \"track\").then(function(info) {\n                            recArray.push(info);\n                        });\n                    });\n                    recommendationsWithInfo.data = recArray;\n                    deferred.resolve(recommendationsWithInfo);\n                });\n            });\n        });\n        return deferred.promise;\n    };\n\n    //gets a provided song/artists id, name,\n    //popularity and an assosciated image\n    var search = function(searchTerm, type) {\n        var defer = $q.defer();\n\n        $http({\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/search?q=' + encodeURI(searchTerm) + \"&type=\" + type\n        }).then(function(result) {\n            // console.log(result);\n\n            var info = {\n                id: result.data[type + 's'].items[0].id,\n                uri: \"https://embed.spotify.com/?uri=\" + result.data[type + 's'].items[0].uri,\n                popularity: result.data[type + 's'].items[0].popularity,\n            };\n            if (result.data[type + 's'].items[0].name.length > 22) {\n                info.name = shorten(result.data[type + 's'].items[0].name);\n            } else {\n                info.name = result.data[type + 's'].items[0].name;\n            }\n            if (type === 'artist') {\n                info.image = result.data.artists.items[0].images[0].url;\n            } else {\n                info.albumImg = result.data.tracks.items[0].album.images[0].url;\n                info.preview = result.data.tracks.items[0].preview_url;\n                info.artistInfo = {\n                    name: result.data.tracks.items[0].artists[0].name,\n                    id: result.data.tracks.items[0].artists[0].id\n                };\n                getInfo(info.id).then(function(result) {\n                    info.acoutsticness = result.acoutsticness;\n                    info.danceability = result.danceability;\n                    info.energy = result.energy;\n                    info.instrumentalness = result.instrumentalness;\n                    info.key = result.key;\n                    info.tempo = result.tempo;\n                }).then(function(result){\n                  checkIfAlreadySaved(info.id).then(function(result){\n                      info.alreadySaved = result;\n                      console.log(info.alreadySaved);\n                  });\n                });\n            }\n            defer.resolve(info);\n        });\n        return defer.promise;\n    };\n\n\n    //gets detailed statistics about and individual song\n    var getInfo = function(songID) {\n        var defer = $q.defer();\n        $http({\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/audio-features/' + songID\n        }).then(function(res) {\n            defer.resolve({\n                acousticness: res.data.acousticness,\n                danceability: res.data.danceability,\n                energy: res.data.energy,\n                instrumentalness: res.data.instrumentalness,\n                key: res.data.key,\n                tempo: res.data.tempo\n            });\n        });\n        return defer.promise;\n    };\n\n    //saves track to your library\n    this.saveTrack = function(id) {\n      token = loginService.getToken();\n      var defer = $q.defer();\n\n      $http({\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeTrack = function(id){\n      token = loginService.getToken();\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    //checks if song is already saved to user's library\n    var checkIfAlreadySaved = function(id){\n        var defer = $q.defer();\n        $http({\n          headers: {\n            'Authorization' : 'Bearer ' + token\n          },\n          method: 'GET',\n          url:'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n        }).then(function(result){\n          defer.resolve(result.data[0]);\n        });\n        return defer.promise;\n    };\n\n    //shortesn song titles that are too long\n    var shorten = function(str) {\n        var arr = str.split(\"\");\n        var res = [];\n        for (var i = 0; i < 22; i++) {\n            res.push(arr[i]);\n        }\n        res.push('...');\n        return res.join('');\n    };\n});\n"]}