{"version":3,"sources":["app.js","login/authController.js","login/loginController.js","login/loginService.js","recommendations/animations.js","recommendations/filter.js","recommendations/recommendationController.js","recommendations/service.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$cookiesProvider","defaults","path","$scope","loginService","$cookies","getToken","window","location","hash","substr","elems","split","console","log","token","setToken","setTimeout","redirect_uri","authorize","then","resp","client_id","isLoggedIn","encodeURIComponent","service","$http","method","now","Date","time","getTime","setTime","put","get","filter","$sce","val","trustAsResourceUrl","spotifyService","getRecommendations","getRecs","artistName","songName","genreName","recs","recommendations","data","saveSong","id","saveTrack","res","removeSong","removeTrack","$q","artist","song","genre","songInfo","artistInfo","deferred","defer","search","songRes","artistRes","headers","response","recommendationsWithInfo","recArray","tracks","forEach","rec","name","info","push","resolve","promise","searchTerm","type","encodeURI","result","items","uri","popularity","length","shorten","image","artists","images","albumImg","album","preview","preview_url","getInfo","acoutsticness","danceability","energy","instrumentalness","key","tempo","checkIfAlreadySaved","alreadySaved","songID","acousticness","str","arr","i","join"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('spotifyApp', ['ngCookies', 'ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        //search state\n        $stateProvider.state('recommendations', {\n                url: '/recommendations',\n                templateUrl: '/components/recommendations/recommendTmpl.html',\n                controller: 'recommendationController'\n            })\n            //login state\n            .state('login', {\n                url: '/',\n                templateUrl: '/components/login/login.html',\n                controller: 'loginController'\n        });\n        $urlRouterProvider.otherwise('/');\n\n    }).config(['$cookiesProvider', function($cookiesProvider) {\n        //makes token accessible for the whole app\n        $cookiesProvider.defaults.path = '/';\n    }]);\n","angular.module('spotifyApp').controller('authController', function($scope, loginService, $cookies) {\n\n    //method to extract token from redirect url\n    $scope.getToken = function() {\n        var url = window.location.hash.substr(1);\n        var elems = url.split('=');\n        console.log(elems);\n        console.log(elems[1].split('&'));\n        $scope.token = (elems[1]);\n    };\n\n    //gets token from url\n    $scope.getToken();\n\n    //sets token\n    loginService.setToken($scope.token);\n\n    //redirects home after 1s\n    setTimeout(function() {\n        window.location = 'http://localhost:8080/#/search';\n    }, 1000);\n\n});\n","angular.module('spotifyApp').controller('loginController', function($scope, loginService) {\n    var redirect_uri = 'http://localhost:8080/components/login/afterAuth.html';\n    //redirects to spotify permission request\n    $scope.authorize = function() {\n        loginService.authorize().then(function(resp) {\n            window.location = \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read&response_type=token\";\n        });\n    };\n    loginService.getToken();\n    $scope.isLoggedIn = loginService.isLoggedIn;\n    if($scope.isLoggedIn){\n      window.location = \"http://localhost:8080/#/recommendations\";\n    }\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/components/login/afterAuth.html');\n\nangular.module('spotifyApp').service('loginService', function($cookies, $http) {\n    this.isLoggedIn = false;\n    //requests auth token from spotify\n    this.authorize = function() {\n        return $http({\n            method: 'GET',\n            url: \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read&response_type=token\"\n        });\n    };\n\n    //save token to a cookie that expires in 1hr\n    this.setToken = function(token){\n      var now = new Date();\n      var time = now.getTime();\n      time += 3600 * 1000;\n      now.setTime(time);\n      $cookies.put('token', token, {'expires': now});\n      console.log(token);\n      this.token = token;\n      this.isLoggedIn = true;\n    };\n\n    //gets token from a cookie\n    this.getToken = function() {\n        var token = $cookies.get('token');\n        console.log(token);\n        if(token){\n          this.isLoggedIn = true;\n        }else{\n          this.isLoggedIn = false;\n        }\n        return token;\n    };\n});\n","","//filter to make iframes work with dynamic urls (for the spotify web player)\nangular.module('spotifyApp').filter('trustAsResourceUrl', ['$sce', function($sce) {\n    return function(val) {\n        return $sce.trustAsResourceUrl(val);\n    };\n}]);\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').controller('recommendationController', function($scope, spotifyService, loginService) {\n\n    //gets token from saved coookie\n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n\n    //gets saved token when page is loaded\n    $scope.getToken();\n\n    //gets recommendations based on seeds\n    $scope.getRecommendations = function() {\n        spotifyService.getRecs($scope.artistName, $scope.songName, $scope.genreName).then(function(recs) {\n            console.log(recs);\n            $scope.recommendations = recs.data;\n        });\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id).then(function(res) {\n            console.log(res);\n        });\n    };\n\n    //removes song from user's library\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id).then(function(res){\n        console.log(res);\n      });\n    };\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').service('spotifyService', function($http, $q, $cookies, loginService) {\n    //looks up ids of provided elements and\n    //gets recommendations accordingly\n    var token;\n    this.getRecs = function(artist, song, genre) {\n        token = loginService.getToken();\n        console.log(artist + \" \" + song + \" \" + genre);\n        var songInfo;\n        var artistInfo;\n        var deferred = $q.defer();\n\n        //gets track ID and info\n        search(song, \"track\").then(function(songRes) {\n            songInfo = songRes;\n            //gets artist ID and info\n            search(artist, \"artist\").then(function(artistRes) {\n                artistInfo = artistRes;\n                //gets recommendations\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/recommendations?seed_tracks=' + songInfo.id + '&seed_artists=' + artistInfo.id + '&seed_genres=' + genre\n                }).then(function(response) {\n                    var recommendationsWithInfo = {};\n                    console.log(response);\n                    //array of recommendations with info about each one\n                    var recArray = [];\n                    var recommendations = response.data.tracks;\n                    recommendations.forEach(function(rec) {\n                        var name = rec.name;\n                        search(name, \"track\").then(function(info) {\n                            recArray.push(info);\n                        });\n                    });\n                    recommendationsWithInfo.data = recArray;\n                    deferred.resolve(recommendationsWithInfo);\n                });\n            });\n        });\n        return deferred.promise;\n    };\n\n    //gets a provided song/artists id, name,\n    //popularity and an assosciated image\n    var search = function(searchTerm, type) {\n        var defer = $q.defer();\n\n        $http({\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/search?q=' + encodeURI(searchTerm) + \"&type=\" + type\n        }).then(function(result) {\n            // console.log(result);\n\n            var info = {\n                id: result.data[type + 's'].items[0].id,\n                uri: \"https://embed.spotify.com/?uri=\" + result.data[type + 's'].items[0].uri,\n                popularity: result.data[type + 's'].items[0].popularity,\n            };\n            if (result.data[type + 's'].items[0].name.length > 22) {\n                info.name = shorten(result.data[type + 's'].items[0].name);\n            } else {\n                info.name = result.data[type + 's'].items[0].name;\n            }\n            if (type === 'artist') {\n                info.image = result.data.artists.items[0].images[0].url;\n            } else {\n                info.albumImg = result.data.tracks.items[0].album.images[0].url;\n                info.preview = result.data.tracks.items[0].preview_url;\n                info.artistInfo = {\n                    name: result.data.tracks.items[0].artists[0].name,\n                    id: result.data.tracks.items[0].artists[0].id\n                };\n                getInfo(info.id).then(function(result) {\n                    info.acoutsticness = result.acoutsticness;\n                    info.danceability = result.danceability;\n                    info.energy = result.energy;\n                    info.instrumentalness = result.instrumentalness;\n                    info.key = result.key;\n                    info.tempo = result.tempo;\n                }).then(function(result){\n                  checkIfAlreadySaved(info.id).then(function(result){\n                      info.alreadySaved = result;\n                      console.log(info.alreadySaved);\n                  });\n                });\n            }\n            defer.resolve(info);\n        });\n        return defer.promise;\n    };\n\n\n    //gets detailed statistics about and individual song\n    var getInfo = function(songID) {\n        var defer = $q.defer();\n        $http({\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/audio-features/' + songID\n        }).then(function(res) {\n            defer.resolve({\n                acousticness: res.data.acousticness,\n                danceability: res.data.danceability,\n                energy: res.data.energy,\n                instrumentalness: res.data.instrumentalness,\n                key: res.data.key,\n                tempo: res.data.tempo\n            });\n        });\n        return defer.promise;\n    };\n\n    //saves track to your library\n    this.saveTrack = function(id) {\n      var defer = $q.defer();\n\n      $http({\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeTrack = function(id){\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    //checks if song is already saved to user's library\n    var checkIfAlreadySaved = function(id){\n        var defer = $q.defer();\n        $http({\n          headers: {\n            'Authorization' : 'Bearer ' + token\n          },\n          method: 'GET',\n          url:'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n        }).then(function(result){\n          defer.resolve(result.data[0]);\n        });\n        return defer.promise;\n    };\n\n    //shortesn song titles that are too long\n    var shorten = function(str) {\n        var arr = str.split(\"\");\n        var res = [];\n        for (var i = 0; i < 22; i++) {\n            res.push(arr[i]);\n        }\n        res.push('...');\n        return res.join('');\n    };\n});\n"]}