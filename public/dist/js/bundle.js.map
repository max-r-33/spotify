{"version":3,"sources":["app.js","artist/artistController.js","artist/artistService.js","login/authController.js","login/loginController.js","login/loginService.js","recommendations/animations.js","recommendations/filter.js","recommendations/recommendationController.js","recommendations/service.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$cookiesProvider","defaults","path","$scope","$stateParams","artistService","artistId","id","getArtistInfo","then","result","artistInfo","console","log","service","$http","$q","loginService","token","getToken","defer","artistID","headers","method","genres","data","popularity","name","image","images","res","alreadyFollowing","response","topTracks","tracks","r","albums","arrayToObject","items","resolve","promise","followArtist","arr","i","length","$cookies","window","location","hash","substr","elems","split","setToken","setTimeout","redirect_uri","authorize","resp","client_id","isLoggedIn","encodeURIComponent","now","Date","time","getTime","setTime","put","get","filter","$sce","val","trustAsResourceUrl","spotifyService","getRecommendations","getRecs","artistName","songName","genreName","recs","recommendations","saveSong","saveTrack","removeSong","removeTrack","artist","song","genre","songInfo","deferred","search","songRes","artistRes","recommendationsWithInfo","recArray","forEach","rec","info","push","searchTerm","type","encodeURI","uri","shorten","artists","albumImg","album","preview","preview_url","getInfo","acoutsticness","danceability","energy","instrumentalness","key","tempo","checkIfAlreadySaved","alreadySaved","songID","acousticness","str","join"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('spotifyApp', ['ngCookies', 'ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        //search state\n        $stateProvider.state('recommendations', {\n                url: '/recommendations',\n                templateUrl: '/components/recommendations/recommendTmpl.html',\n                controller: 'recommendationController'\n            })\n            //login state\n            .state('login', {\n                url: '/',\n                templateUrl: '/components/login/login.html',\n                controller: 'loginController'\n            })\n\n            .state('artist', {\n                url:'/artist/:id',\n                templateUrl: '/components/artist/artistTmpl.html',\n                controller: 'artistController'\n            });\n        $urlRouterProvider.otherwise('/');\n\n    }).config(['$cookiesProvider', function($cookiesProvider) {\n        //makes token accessible for the whole app\n        $cookiesProvider.defaults.path = '/';\n    }]);\n","angular.module('spotifyApp').controller('artistController', function($scope, $stateParams, artistService){\n  $scope.artistId = $stateParams.id;\n\n  //gets artist info\n  artistService.getArtistInfo($scope.artistId).then(function(result){\n      $scope.artistInfo = result;\n      console.log(result);\n  });\n\n  console.log($scope.artistInfo);\n});\n","angular.module('spotifyApp').service('artistService', function($http, $q, loginService) {\n    var token = loginService.getToken();\n\n    //gets artist info from spotify\n    this.getArtistInfo = function(id) {\n        //gets basic artist info\n        var defer = $q.defer();\n        var artistInfo = {};\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/artists/' + id\n        }).then(function(result) {\n            artistInfo.genres = result.data.genres;\n            artistInfo.popularity = result.data.popularity;\n            artistInfo.name = result.data.name;\n            artistInfo.image = result.data.images[1];\n        }).then(function() {\n            //gets if a user follows an artist\n            $http({\n                headers: {\n                    \"Authorization\": 'Bearer ' + token\n                },\n                method: 'GET',\n                url: 'https://api.spotify.com/v1/me/following/contains?type=artist&ids=' + artistID\n            }).then(function(res) {\n                artistInfo.alreadyFollowing = res.data[0];\n            }).then(function() {\n                //gets an artist's top tracks\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/artists/' + artistID + '/top-tracks?country=US'\n                }).then(function(response) {\n                    artistInfo.topTracks = response.data.tracks;\n                }).then(function() {\n                    //gets an artist's albums\n                    $http({\n                        headers: {\n                            \"Authorization\": 'Bearer ' + token\n                        },\n                        method: 'GET',\n                        url: 'https://api.spotify.com/v1/artists/' + artistID + '/albums?country=US'\n                    }).then(function(r) {\n                        artistInfo.albums = arrayToObject(r.data.items);\n                    });\n                });\n            });\n        });\n        defer.resolve(artistInfo);\n        return defer.promise;\n    };\n\n    //follows artist with given id\n    this.followArtist = function(id) {\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            console.log(res);\n        });\n    };\n\n    var arrayToObject = function(arr){\n      var res = {};\n      for(var i = 0; i < arr.length; i++){\n        res[i] = arr[i];\n      }\n      return res;\n    };\n\n});\n","angular.module('spotifyApp').controller('authController', function($scope, loginService, $cookies) {\n\n    //method to extract token from redirect url\n    $scope.getToken = function() {\n        var url = window.location.hash.substr(1);\n        var elems = url.split('=');\n        console.log(elems);\n        console.log(elems[1].split('&'));\n        $scope.token = (elems[1]);\n    };\n\n    //gets token from url\n    $scope.getToken();\n\n    //sets token\n    loginService.setToken($scope.token);\n\n    //redirects home after 1s\n    setTimeout(function() {\n        window.location = 'http://localhost:8080/#/search';\n    }, 1000);\n\n});\n","angular.module('spotifyApp').controller('loginController', function($scope, loginService) {\n    var redirect_uri = 'http://localhost:8080/components/login/afterAuth.html';\n    //redirects to spotify permission request\n    $scope.authorize = function() {\n        loginService.authorize().then(function(resp) {\n            window.location = \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\";\n        });\n    };\n    loginService.getToken();\n    $scope.isLoggedIn = loginService.isLoggedIn;\n    if($scope.isLoggedIn){\n      window.location = \"http://localhost:8080/#/recommendations\";\n    }\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/components/login/afterAuth.html');\n\nangular.module('spotifyApp').service('loginService', function($cookies, $http) {\n    this.isLoggedIn = false;\n    //requests auth token from spotify\n    this.authorize = function() {\n        return $http({\n            method: 'GET',\n            url: \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\"\n        });\n    };\n\n    //save token to a cookie that expires in 1hr\n    this.setToken = function(token){\n      var now = new Date();\n      var time = now.getTime();\n      time += 3600 * 1000;\n      now.setTime(time);\n      $cookies.put('token', token, {'expires': now});\n      console.log(token);\n      this.token = token;\n      this.isLoggedIn = true;\n    };\n\n    //gets token from a cookie\n    this.getToken = function() {\n        var token = $cookies.get('token');\n        console.log(token);\n        if(token){\n          this.isLoggedIn = true;\n        }else{\n          this.isLoggedIn = false;\n        }\n        return token;\n    };\n});\n","","//filter to make iframes work with dynamic urls (for the spotify web player)\nangular.module('spotifyApp').filter('trustAsResourceUrl', ['$sce', function($sce) {\n    return function(val) {\n        return $sce.trustAsResourceUrl(val);\n    };\n}]);\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').controller('recommendationController', function($scope, spotifyService, loginService) {\n\n    //gets token from saved coookie\n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n\n    //gets saved token when page is loaded\n    $scope.getToken();\n\n    //gets recommendations based on seeds\n    $scope.getRecommendations = function() {\n        spotifyService.getRecs($scope.artistName, $scope.songName, $scope.genreName).then(function(recs) {\n            console.log(recs);\n            $scope.recommendations = recs.data;\n        });\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id).then(function(res) {\n            console.log(res);\n        });\n    };\n\n    //removes song from user's library\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id).then(function(res){\n        console.log(res);\n      });\n    };\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').service('spotifyService', function($http, $q, $cookies, loginService) {\n    //looks up ids of provided elements and\n    //gets recommendations accordingly\n    var token;\n    this.getRecs = function(artist, song, genre) {\n        token = loginService.getToken();\n        console.log(artist + \" \" + song + \" \" + genre);\n        var songInfo;\n        var artistInfo;\n        var deferred = $q.defer();\n\n        //gets track ID and info\n        search(song, \"track\").then(function(songRes) {\n            songInfo = songRes;\n            //gets artist ID and info\n            search(artist, \"artist\").then(function(artistRes) {\n                artistInfo = artistRes;\n                //gets recommendations\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/recommendations?seed_tracks=' + songInfo.id + '&seed_artists=' + artistInfo.id + '&seed_genres=' + genre\n                }).then(function(response) {\n                    var recommendationsWithInfo = {};\n                    console.log(response);\n                    //array of recommendations with info about each one\n                    var recArray = [];\n                    var recommendations = response.data.tracks;\n                    recommendations.forEach(function(rec) {\n                        var name = rec.name;\n                        search(name, \"track\").then(function(info) {\n                            recArray.push(info);\n                        });\n                    });\n                    recommendationsWithInfo.data = recArray;\n                    deferred.resolve(recommendationsWithInfo);\n                });\n            });\n        });\n        return deferred.promise;\n    };\n\n    //gets a provided song/artists id, name,\n    //popularity and an assosciated image\n    var search = function(searchTerm, type) {\n        var defer = $q.defer();\n\n        $http({\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/search?q=' + encodeURI(searchTerm) + \"&type=\" + type\n        }).then(function(result) {\n            // console.log(result);\n\n            var info = {\n                id: result.data[type + 's'].items[0].id,\n                uri: \"https://embed.spotify.com/?uri=\" + result.data[type + 's'].items[0].uri,\n                popularity: result.data[type + 's'].items[0].popularity,\n            };\n            if (result.data[type + 's'].items[0].name.length > 22) {\n                info.name = shorten(result.data[type + 's'].items[0].name);\n            } else {\n                info.name = result.data[type + 's'].items[0].name;\n            }\n            if (type === 'artist') {\n                info.image = result.data.artists.items[0].images[0].url;\n            } else {\n                info.albumImg = result.data.tracks.items[0].album.images[0].url;\n                info.preview = result.data.tracks.items[0].preview_url;\n                info.artistInfo = {\n                    name: result.data.tracks.items[0].artists[0].name,\n                    id: result.data.tracks.items[0].artists[0].id\n                };\n                getInfo(info.id).then(function(result) {\n                    info.acoutsticness = result.acoutsticness;\n                    info.danceability = result.danceability;\n                    info.energy = result.energy;\n                    info.instrumentalness = result.instrumentalness;\n                    info.key = result.key;\n                    info.tempo = result.tempo;\n                }).then(function(result){\n                  checkIfAlreadySaved(info.id).then(function(result){\n                      info.alreadySaved = result;\n                      console.log(info.alreadySaved);\n                  });\n                });\n            }\n            defer.resolve(info);\n        });\n        return defer.promise;\n    };\n\n\n    //gets detailed statistics about and individual song\n    var getInfo = function(songID) {\n        var defer = $q.defer();\n        $http({\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/audio-features/' + songID\n        }).then(function(res) {\n            defer.resolve({\n                acousticness: res.data.acousticness,\n                danceability: res.data.danceability,\n                energy: res.data.energy,\n                instrumentalness: res.data.instrumentalness,\n                key: res.data.key,\n                tempo: res.data.tempo\n            });\n        });\n        return defer.promise;\n    };\n\n    //saves track to your library\n    this.saveTrack = function(id) {\n      var defer = $q.defer();\n\n      $http({\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeTrack = function(id){\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    //checks if song is already saved to user's library\n    var checkIfAlreadySaved = function(id){\n        var defer = $q.defer();\n        $http({\n          headers: {\n            'Authorization' : 'Bearer ' + token\n          },\n          method: 'GET',\n          url:'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n        }).then(function(result){\n          defer.resolve(result.data[0]);\n        });\n        return defer.promise;\n    };\n\n    //shortesn song titles that are too long\n    var shorten = function(str) {\n        var arr = str.split(\"\");\n        var res = [];\n        for (var i = 0; i < 22; i++) {\n            res.push(arr[i]);\n        }\n        res.push('...');\n        return res.join('');\n    };\n});\n"]}