{"version":3,"sources":["app.js","login/authController.js","login/loginController.js","login/loginService.js","artist/artistController.js","artist/artistService.js","recommendations/animations.js","recommendations/filter.js","recommendations/recommendationController.js","recommendations/service.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$cookiesProvider","defaults","path","$scope","loginService","$cookies","getToken","window","location","hash","substr","elems","split","console","log","token","setToken","setTimeout","redirect_uri","authorize","then","resp","client_id","isLoggedIn","encodeURIComponent","service","$http","method","now","Date","time","getTime","setTime","put","get","$stateParams","artistService","artistId","id","getArtistInfo","result","artistInfo","follow","followArtist","unfollow","unfollowArtist","$q","defer","artistID","headers","genres","data","popularity","name","i","images","length","height","width","image","res","alreadyFollowing","response","topTracks","tracks","r","albums","items","resolve","promise","filter","$sce","val","trustAsResourceUrl","spotifyService","getRecommendations","getRecs","artistName","songName","genreName","recs","recommendations","saveSong","saveTrack","removeSong","removeTrack","artist","song","genre","songInfo","deferred","search","songRes","artistRes","recommendationsWithInfo","recArray","forEach","rec","info","push","searchTerm","type","encodeURI","uri","shorten","artists","albumImg","album","preview","preview_url","getInfo","acoutsticness","danceability","energy","instrumentalness","key","tempo","checkIfAlreadySaved","alreadySaved","songID","acousticness","str","arr","join"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('spotifyApp', ['ngCookies', 'ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        //search state\n        $stateProvider.state('recommendations', {\n                url: '/recommendations',\n                templateUrl: '/components/recommendations/recommendTmpl.html',\n                controller: 'recommendationController'\n            })\n            //login state\n            .state('login', {\n                url: '/',\n                templateUrl: '/components/login/login.html',\n                controller: 'loginController'\n            })\n\n            .state('artist', {\n                url:'/artist/:id',\n                templateUrl: '/components/artist/artistTmpl.html',\n                controller: 'artistController'\n            });\n        $urlRouterProvider.otherwise('/');\n\n    }).config(['$cookiesProvider', function($cookiesProvider) {\n        //makes token accessible for the whole app\n        $cookiesProvider.defaults.path = '/';\n    }]);\n","angular.module('spotifyApp').controller('authController', function($scope, loginService, $cookies) {\n\n    //method to extract token from redirect url\n    $scope.getToken = function() {\n        var url = window.location.hash.substr(1);\n        var elems = url.split('=');\n        console.log(elems);\n        console.log(elems[1].split('&'));\n        $scope.token = (elems[1]);\n    };\n\n    //gets token from url\n    $scope.getToken();\n\n    //sets token\n    loginService.setToken($scope.token);\n\n    //redirects home after 1s\n    setTimeout(function() {\n        window.location = 'http://localhost:8080/#/search';\n    }, 1000);\n\n});\n","angular.module('spotifyApp').controller('loginController', function($scope, loginService) {\n    var redirect_uri = 'http://localhost:8080/components/login/afterAuth.html';\n    //redirects to spotify permission request\n    $scope.authorize = function() {\n        loginService.authorize().then(function(resp) {\n            window.location = \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\";\n        });\n    };\n    loginService.getToken();\n    $scope.isLoggedIn = loginService.isLoggedIn;\n    if($scope.isLoggedIn){\n      window.location = \"http://localhost:8080/#/recommendations\";\n    }\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/components/login/afterAuth.html');\n\nangular.module('spotifyApp').service('loginService', function($cookies, $http) {\n    this.isLoggedIn = false;\n    //requests auth token from spotify\n    this.authorize = function() {\n        return $http({\n            method: 'GET',\n            url: \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\"\n        });\n    };\n\n    //save token to a cookie that expires in 1hr\n    this.setToken = function(token){\n      var now = new Date();\n      var time = now.getTime();\n      time += 3600 * 1000;\n      now.setTime(time);\n      $cookies.put('token', token, {'expires': now});\n      console.log(token);\n      this.token = token;\n      this.isLoggedIn = true;\n    };\n\n    //gets token from a cookie\n    this.getToken = function() {\n        var token = $cookies.get('token');\n        console.log(token);\n        if(token){\n          this.isLoggedIn = true;\n        }else{\n          this.isLoggedIn = false;\n        }\n        return token;\n    };\n});\n","angular.module('spotifyApp').controller('artistController', function($scope, $stateParams, artistService){\n  $scope.artistId = $stateParams.id;\n\n  //gets artist info\n  artistService.getArtistInfo($scope.artistId).then(function(result){\n      $scope.artistInfo = result;\n      console.log(result);\n  });\n\n  //follows artist\n  $scope.follow = function(id){\n      console.log($scope.artistId);\n      artistService.followArtist($scope.artistId);\n  };\n\n\n  //unfollows artist\n  $scope.unfollow = function(id){\n      console.log($scope.artistId);\n      artistService.unfollowArtist($scope.artistId);\n  };\n\n\n  console.log($scope.artistInfo);\n});\n","angular.module('spotifyApp').service('artistService', function($http, $q, loginService) {\n    var token = loginService.getToken();\n\n    //gets artist info from spotify\n    this.getArtistInfo = function(id) {\n        //gets basic artist info\n        var defer = $q.defer();\n        var artistInfo = {};\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/artists/' + id\n        }).then(function(result) {\n            artistInfo.genres = result.data.genres;\n            artistInfo.popularity = result.data.popularity;\n            artistInfo.name = result.data.name;\n            //gets biggest square image\n            for (var i = result.data.images.length - 1; i >= 0; i--) {\n                if (result.data.images[i].height === result.data.images[i].width) {\n                    artistInfo.image = result.data.images[i];\n                }\n            }\n            artistInfo.image = result.data.images[1];\n        }).then(function() {\n            //gets if a user follows an artist\n            $http({\n                headers: {\n                    \"Authorization\": 'Bearer ' + token\n                },\n                method: 'GET',\n                url: 'https://api.spotify.com/v1/me/following/contains?type=artist&ids=' + artistID\n            }).then(function(res) {\n                artistInfo.alreadyFollowing = res.data[0];\n            }).then(function() {\n                //gets an artist's top tracks\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/artists/' + artistID + '/top-tracks?country=US'\n                }).then(function(response) {\n                    console.log(response);\n                    artistInfo.topTracks = response.data.tracks;\n                }).then(function() {\n                    //gets an artist's albums\n                    $http({\n                        headers: {\n                            \"Authorization\": 'Bearer ' + token\n                        },\n                        method: 'GET',\n                        url: 'https://api.spotify.com/v1/artists/' + artistID + '/albums?country=US'\n                    }).then(function(r) {\n                        artistInfo.albums = r.data.items;\n                        //if there were no sqaure images from the artist\n                        //profile, it sets the artists most recent album as\n                        //it's profile photo.\n                        if (!artistInfo.image) {\n                            artistInfo.image = r.data.items[0].images[0];\n                        }\n                    });\n                });\n            });\n        });\n        defer.resolve(artistInfo);\n        return defer.promise;\n    };\n\n    //follows artist with given id\n    this.followArtist = function(id) {\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            console.log(res);\n        });\n    };\n\n    //unfollows artist with given id\n    this.unfollowArtist = function(id) {\n        var artistID = id;\n        console.log(`artistID ${artistID}`);\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'DELETE',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            console.log(res);\n        });\n    };\n\n});\n","","//filter to make iframes work with dynamic urls (for the spotify web player)\nangular.module('spotifyApp').filter('trustAsResourceUrl', ['$sce', function($sce) {\n    return function(val) {\n        return $sce.trustAsResourceUrl(val);\n    };\n}]);\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').controller('recommendationController', function($scope, spotifyService, loginService) {\n\n    //gets token from saved coookie\n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n\n    //gets saved token when page is loaded\n    $scope.getToken();\n\n    //gets recommendations based on seeds\n    $scope.getRecommendations = function() {\n        spotifyService.getRecs($scope.artistName, $scope.songName, $scope.genreName).then(function(recs) {\n            console.log(recs);\n            $scope.recommendations = recs.data;\n        });\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id).then(function(res) {\n            console.log(res);\n        });\n    };\n\n    //removes song from user's library\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id).then(function(res){\n        console.log(res);\n      });\n    };\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').service('spotifyService', function($http, $q, $cookies, loginService) {\n    //looks up ids of provided elements and\n    //gets recommendations accordingly\n    var token;\n    this.getRecs = function(artist, song, genre) {\n        token = loginService.getToken();\n        console.log(artist + \" \" + song + \" \" + genre);\n        var songInfo;\n        var artistInfo;\n        var deferred = $q.defer();\n\n        //gets track ID and info\n        search(song, \"track\").then(function(songRes) {\n            songInfo = songRes;\n            //gets artist ID and info\n            search(artist, \"artist\").then(function(artistRes) {\n                artistInfo = artistRes;\n                //gets recommendations\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/recommendations?seed_tracks=' + songInfo.id + '&seed_artists=' + artistInfo.id + '&seed_genres=' + genre\n                }).then(function(response) {\n                    var recommendationsWithInfo = {};\n                    console.log(response);\n                    //array of recommendations with info about each one\n                    var recArray = [];\n                    var recommendations = response.data.tracks;\n                    recommendations.forEach(function(rec) {\n                        var name = rec.name;\n                        search(name, \"track\").then(function(info) {\n                            recArray.push(info);\n                        });\n                    });\n                    recommendationsWithInfo.data = recArray;\n                    deferred.resolve(recommendationsWithInfo);\n                });\n            });\n        });\n        return deferred.promise;\n    };\n\n    //gets a provided song/artists id, name,\n    //popularity and an assosciated image\n    var search = function(searchTerm, type) {\n        var defer = $q.defer();\n\n        $http({\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/search?q=' + encodeURI(searchTerm) + \"&type=\" + type\n        }).then(function(result) {\n            // console.log(result);\n\n            var info = {\n                id: result.data[type + 's'].items[0].id,\n                uri: \"https://embed.spotify.com/?uri=\" + result.data[type + 's'].items[0].uri,\n                popularity: result.data[type + 's'].items[0].popularity,\n            };\n            if (result.data[type + 's'].items[0].name.length > 22) {\n                info.name = shorten(result.data[type + 's'].items[0].name);\n            } else {\n                info.name = result.data[type + 's'].items[0].name;\n            }\n            if (type === 'artist') {\n                info.image = result.data.artists.items[0].images[0].url;\n            } else {\n                info.albumImg = result.data.tracks.items[0].album.images[0].url;\n                info.preview = result.data.tracks.items[0].preview_url;\n                info.artistInfo = {\n                    name: result.data.tracks.items[0].artists[0].name,\n                    id: result.data.tracks.items[0].artists[0].id\n                };\n                getInfo(info.id).then(function(result) {\n                    info.acoutsticness = result.acoutsticness;\n                    info.danceability = result.danceability;\n                    info.energy = result.energy;\n                    info.instrumentalness = result.instrumentalness;\n                    info.key = result.key;\n                    info.tempo = result.tempo;\n                }).then(function(result){\n                  checkIfAlreadySaved(info.id).then(function(result){\n                      info.alreadySaved = result;\n                      console.log(info.alreadySaved);\n                  });\n                });\n            }\n            defer.resolve(info);\n        });\n        return defer.promise;\n    };\n\n\n    //gets detailed statistics about and individual song\n    var getInfo = function(songID) {\n        var defer = $q.defer();\n        $http({\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/audio-features/' + songID\n        }).then(function(res) {\n            defer.resolve({\n                acousticness: res.data.acousticness,\n                danceability: res.data.danceability,\n                energy: res.data.energy,\n                instrumentalness: res.data.instrumentalness,\n                key: res.data.key,\n                tempo: res.data.tempo\n            });\n        });\n        return defer.promise;\n    };\n\n    //saves track to your library\n    this.saveTrack = function(id) {\n      var defer = $q.defer();\n\n      $http({\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeTrack = function(id){\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    //checks if song is already saved to user's library\n    var checkIfAlreadySaved = function(id){\n        var defer = $q.defer();\n        $http({\n          headers: {\n            'Authorization' : 'Bearer ' + token\n          },\n          method: 'GET',\n          url:'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n        }).then(function(result){\n          defer.resolve(result.data[0]);\n        });\n        return defer.promise;\n    };\n\n    //shortesn song titles that are too long\n    var shorten = function(str) {\n        var arr = str.split(\"\");\n        var res = [];\n        for (var i = 0; i < 22; i++) {\n            res.push(arr[i]);\n        }\n        res.push('...');\n        return res.join('');\n    };\n});\n"]}