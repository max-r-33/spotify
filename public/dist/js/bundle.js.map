{"version":3,"sources":["app.js","filter.js","timeFilter.js","album/albumController.js","album/albumService.js","artist/artistController.js","artist/artistService.js","library/libraryCtrl.js","library/libraryService.js","login/authController.js","login/loginController.js","login/loginService.js","navbar/navbar.js","recommendations/animations.js","recommendations/recommendationController.js","recommendations/service.js","search/searchController.js","search/searchService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$cookiesProvider","defaults","path","filter","$sce","val","trustAsResourceUrl","s","ms","secs","mins","hrs","$scope","$stateParams","albumService","spotifyService","albumId","id","getAlbum","getAlbumInfo","then","response","albumInfo","saveSong","saveTrack","removeSong","removeTrack","saveAlbum","removeAlbum","service","$http","$q","loginService","token","getToken","defer","headers","method","res","artist","data","artists","image","images","name","releaseDate","release_date","tracks","items","result","alreadySaved","x","length","checkIfTrackSaved","resolve","console","log","promise","index","track","artistService","artistId","getArtistInfo","artistInfo","follow","followArtist","unfollow","unfollowArtist","undefined","artistID","genres","popularity","i","height","width","alreadyFollowing","topTracks","forEach","checkIfSongSaved","r","albumArr","album_type","push","albums","getTracksOnAlbum","trackList","libraryService","library","offset","window","location","getLib","getLibrary","item","addSavedProp","$cookies","hash","substr","elems","split","setToken","setTimeout","redirect_uri","authorize","resp","client_id","isLoggedIn","encodeURIComponent","now","Date","time","getTime","setTime","put","get","directive","restrict","getRecommendations","getRecs","artistName","songName","genreName","recs","recommendations","song","genre","songInfo","deferred","search","songRes","artistRes","recommendationsWithInfo","recArray","rec","info","searchTerm","type","encodeURI","uri","shorten","album","albumImg","preview","preview_url","getInfo","acoutsticness","danceability","energy","instrumentalness","key","tempo","checkIfAlreadySaved","songID","acousticness","str","arr","join","searchService","hideLabels","term","searchRes","y","d","l","a","checkSong"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('spotifyApp', ['ngCookies', 'ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        //search state\n        $stateProvider.state('recommendations', {\n                url: '/recommendations',\n                templateUrl: 'https://max-r-33.github.io/spotify/public/components/recommendations/recommendTmpl.html',\n                controller: 'recommendationController'\n            })\n\n            //login state\n            .state('login', {\n                url: '/',\n                templateUrl: 'https://max-r-33.github.io/spotify/public/components/login/login.html',\n                controller: 'loginController'\n            })\n\n            //artist pages\n            .state('artist', {\n                url:'/artist/:id',\n                templateUrl: 'https://max-r-33.github.io/spotify/public/components/public/components/artist/artistTmpl.html',\n                controller: 'artistController'\n            })\n\n            //album pages\n            .state('album', {\n                url:'/album/:id',\n                templateUrl: 'https://max-r-33.github.io/spotify/public/components/public/components/album/albumTmpl.html',\n                controller:'albumController'\n            })\n\n            //search page\n            .state('search', {\n                url:'/search',\n                templateUrl: 'https://max-r-33.github.io/spotify/public/components/public/components/search/searchTmpl.html',\n                controller: 'searchController'\n            })\n\n            //library page\n            .state('library', {\n                url:'/library',\n                templateUrl:'https://max-r-33.github.io/spotify/public/components/public/components/library/libraryTmpl.html',\n                controller:'libraryController'\n            });\n\n        $urlRouterProvider.otherwise('/');\n\n    }).config(['$cookiesProvider', function($cookiesProvider) {\n        //makes token accessible for the whole app\n        $cookiesProvider.defaults.path = '/';\n    }]);\n","//filter to make iframes work with dynamic urls (for the spotify web player)\n//and for some images\nangular.module('spotifyApp').filter('trustAsResourceUrl', ['$sce', function($sce) {\n    return function(val) {\n        return $sce.trustAsResourceUrl(val);\n    };\n}]);\n","//takes in a time value in ms and turns it into mins and seconds display\nangular.module('spotifyApp').filter('timeFilter', function() {\n\n    return function(s) {\n        var ms = s % 1000;\n        s = (s - ms) / 1000;\n        var secs = s % 60;\n        s = (s - secs) / 60;\n        var mins = s % 60;\n        var hrs = (s - mins) / 60;\n        if (secs < 10) {\n            secs = secs + '0';\n        }\n        return mins + ':' + secs;\n    };\n});\n","angular.module('spotifyApp').controller('albumController', function($scope, $stateParams, albumService, spotifyService) {\n    $scope.albumId = $stateParams.id;\n    $scope.getAlbum = function() {\n        albumService.getAlbumInfo($scope.albumId).then(function(response) {\n            $scope.albumInfo = response;\n        });\n    };\n\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n\n    $scope.removeSong = function(id) {\n        spotifyService.removeTrack(id);\n    };\n\n    $scope.saveAlbum = function(id) {\n        spotifyService.saveAlbum(id);\n    };\n\n    $scope.removeAlbum = function(id) {\n        spotifyService.removeAlbum(id);\n    };\n    $scope.getAlbum();\n\n\n});\n","angular.module('spotifyApp').service('albumService', function($http, $q, loginService) {\n    var token = loginService.getToken();\n    var albumInfo = {};\n\n    this.getAlbumInfo = function(id) {\n        //gets basic album info\n        var defer = $q.defer();\n\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/albums/' + id\n        }).then(function(res) {\n            albumInfo.artist = res.data.artists[0];\n            albumInfo.image = res.data.images[0].url;\n            albumInfo.name = res.data.name;\n            albumInfo.releaseDate = res.data.release_date;\n            albumInfo.tracks = res.data.tracks.items;\n        }).then(function() {\n            //checks if album has been saved\n            $http({\n                headers: {\n                    \"Authorization\": 'Bearer ' + token\n                },\n                method: 'GET',\n                url: 'https://api.spotify.com/v1/me/albums/contains?ids=' + id\n            }).then(function(result) {\n                //checks if each song has been saved\n                albumInfo.alreadySaved = result.data[0];\n                for (var x = 0; x < albumInfo.tracks.length; x++) {\n                    checkIfTrackSaved(albumInfo.tracks[x].id, x);\n                }\n            });\n        });\n        defer.resolve(albumInfo);\n        console.log(albumInfo);\n        return defer.promise;\n    };\n\n    //checks if track with given id has ben saved\n    var checkIfTrackSaved = function(id, index) {\n        var track = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/me/tracks/contains?ids=' + track\n        }).then(function(result) {\n            albumInfo.tracks[index].alreadySaved = result.data[0];\n        });\n    };\n});\n","angular.module('spotifyApp').controller('artistController', function($scope, $stateParams, artistService, spotifyService) {\n    $scope.artistId = $stateParams.id;\n    console.log($scope.artistId);\n    //gets artist info\n    artistService.getArtistInfo($scope.artistId).then(function(result) {\n        $scope.artistInfo = result;\n        console.log($scope.artistInfo);\n    });\n\n    //follows artist\n    $scope.follow = function() {\n        artistService.followArtist($scope.artistId);\n    };\n\n\n    //unfollows artist\n    $scope.unfollow = function() {\n        artistService.unfollowArtist($scope.artistId);\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n\n    //removes saved song from user's library\n    $scope.removeSong = function(id) {\n        spotifyService.removeTrack(id);\n    };\n\n});\n","angular.module('spotifyApp').service('artistService', function($http, $q, loginService) {\n    var token = loginService.getToken();\n    var artistInfo = {};\n    //gets artist info from spotify\n    this.getArtistInfo = function(id) {\n        //gets basic artist info\n        artistInfo.image = undefined;\n        var defer = $q.defer();\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/artists/' + id\n        }).then(function(result) {\n            artistInfo.genres = result.data.genres;\n            artistInfo.popularity = result.data.popularity;\n            artistInfo.name = result.data.name;\n            //gets biggest square image\n            for (var i = result.data.images.length - 1; i >= 0; i--) {\n                if (result.data.images[i].height === result.data.images[i].width) {\n                    artistInfo.image = result.data.images[i];\n                }\n            }\n        }).then(function() {\n            //gets if a user follows an artist\n            $http({\n                headers: {\n                    \"Authorization\": 'Bearer ' + token\n                },\n                method: 'GET',\n                url: 'https://api.spotify.com/v1/me/following/contains?type=artist&ids=' + artistID\n            }).then(function(res) {\n                artistInfo.alreadyFollowing = res.data[0];\n            }).then(function() {\n                //gets an artist's top tracks\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/artists/' + artistID + '/top-tracks?country=US'\n                }).then(function(response) {\n                    artistInfo.topTracks = response.data.tracks;\n                    artistInfo.topTracks.forEach(function(track) {\n                        //checks if a user already\n                        checkIfSongSaved(track.id).then(function(result) {\n                            track.alreadySaved = result.data[0];\n                        });\n                    });\n                }).then(function() {\n                    //gets an artist's albums\n                    $http({\n                        headers: {\n                            \"Authorization\": 'Bearer ' + token\n                        },\n                        method: 'GET',\n                        url: 'https://api.spotify.com/v1/artists/' + artistID + '/albums?country=US'\n                    }).then(function(r) {\n                        // console.log(r);\n                        var albumArr = [];\n                        //filters out singles and compilations\n                        for (var i = 0; i < r.data.items.length; i++) {\n                            if (r.data.items[i].album_type === 'album') {\n                                albumArr.push(r.data.items[i]);\n                            }\n                        }\n                        artistInfo.albums = albumArr;\n                        console.log(artistInfo.albums);\n                        //request to get all tracks from each album\n                        for (var x = 0; x < artistInfo.albums.length; x++) {\n                            getTracksOnAlbum(artistInfo.albums[x].id, x);\n                        }\n\n                        //if there were no sqaure images from the artist\n                        //profile, it sets the artists most recent album as\n                        //the profile photo.\n                        if (!artistInfo.image) {\n                            artistInfo.image = r.data.items[0].images[0];\n                        }\n                    });\n                });\n            });\n        });\n        defer.resolve(artistInfo);\n        // console.log(artistInfo);\n        return defer.promise;\n    };\n\n    //follows artist with given id\n    this.followArtist = function(id) {\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            console.log(res);\n        });\n    };\n\n    //unfollows artist with given id\n    this.unfollowArtist = function(id) {\n        var artistID = id;\n        // console.log(`artistID ${artistID}`);\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'DELETE',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            //console.log(res);\n        });\n    };\n\n    //checks if a song is already saved to a user's library\n    var checkIfSongSaved = function(id) {\n        var artistID = id;\n        return $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/me/tracks/contains?ids=' + artistID\n        });\n    };\n\n    //gets tracks on album with given id, made it a separate\n    //function to break scope\n    var getTracksOnAlbum = function(id, index) {\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/albums/' + artistID\n        }).then(function(trackList) {\n            artistInfo.albums[index].tracks = trackList.data.tracks;\n        });\n    };\n\n});\n","angular.module('spotifyApp').controller('libraryController', function($scope, libraryService, loginService, spotifyService){\n    $scope.library = {};\n    $scope.library.items = [];\n    $scope.offset = 0;\n\n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n    $scope.getToken();\n\n    $scope.getLib = function(){\n      libraryService.getLibrary($scope.offset).then(function(result){\n        result.data.items.forEach(function(item){\n          $scope.library.items.push(item);\n        });\n        addSavedProp($scope.library.items);\n      });\n      $scope.offset += 20;\n    };\n\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id);\n    };\n\n    $scope.saveSong = function(id){\n      spotifyService.saveTrack(id);\n    };\n\n    var addSavedProp = function(tracks){\n      tracks.forEach(function(track){\n        track.alreadySaved = true;\n      });\n    };\n\n\n    $scope.getLib();\n});\n","angular.module('spotifyApp').service('libraryService', function($http, spotifyService, loginService){\n  var token = loginService.getToken();\n\n  this.getLibrary = function(offset){\n    return $http({\n      headers: {\n          \"Authorization\": 'Bearer ' + token\n      },\n      method: 'GET',\n      url: 'https://api.spotify.com/v1/me/tracks?offset=' + offset\n    });\n  };\n});\n","angular.module('spotifyApp').controller('authController', function($scope, loginService, $cookies) {\n\n    //method to extract token from redirect url\n    $scope.getToken = function() {\n        var url = window.location.hash.substr(1);\n        var elems = url.split('=');\n        console.log(elems);\n        console.log(elems[1].split('&'));\n        $scope.token = (elems[1]);\n    };\n\n    //gets token from url\n    $scope.getToken();\n\n    //sets token\n    loginService.setToken($scope.token);\n\n    //redirects home after 1s\n    setTimeout(function() {\n        window.location = 'https://max-r-33.github.io/spotify/public/#/search';\n    }, 1000);\n\n});\n","angular.module('spotifyApp').controller('loginController', function($scope, loginService) {\n    var redirect_uri = 'https://max-r-33.github.io/spotify/public/components/login/afterAuth.html';\n    //redirects to spotify permission request\n    $scope.authorize = function() {\n        loginService.authorize().then(function(resp) {\n            window.location = \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\";\n        });\n    };\n    loginService.getToken();\n    $scope.isLoggedIn = loginService.isLoggedIn;\n    if($scope.isLoggedIn){\n      window.location = \"https://max-r-33.github.io/spotify/public/#/recommendations\";\n    }\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('https://max-r-33.github.io/spotify/public/components/login/afterAuth.html');\n\nangular.module('spotifyApp').service('loginService', function($cookies, $http) {\n    this.isLoggedIn = false;\n    //requests auth token from spotify\n    this.authorize = function() {\n        return $http({\n            method: 'GET',\n            url: \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\"\n        });\n    };\n\n    //save token to a cookie that expires in 1hr\n    this.setToken = function(token){\n      var now = new Date();\n      var time = now.getTime();\n      time += 3600 * 1000;\n      now.setTime(time);\n      $cookies.put('token', token, {'expires': now});\n      console.log(token);\n      this.token = token;\n      this.isLoggedIn = true;\n    };\n\n    //gets token from a cookie\n    this.getToken = function() {\n        var token = $cookies.get('token');\n        console.log(token);\n        if(token){\n          this.isLoggedIn = true;\n        }else{\n          this.isLoggedIn = false;\n        }\n        return token;\n    };\n});\n","angular.module('spotifyApp').directive('navBar', function(){\n  return {\n    restrict:'E',\n    templateUrl:'https://max-r-33.github.io/spotify/public/components/navbar/navbarTmpl.html'\n  };\n});\n","","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').controller('recommendationController', function($scope, spotifyService, loginService) {\n\n    //gets token from saved coookie\n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n\n    //gets saved token when page is loaded\n    $scope.getToken();\n\n    //gets recommendations based on seeds\n    $scope.getRecommendations = function() {\n        spotifyService.getRecs($scope.artistName, $scope.songName, $scope.genreName).then(function(recs) {\n            console.log(recs);\n            $scope.recommendations = recs.data;\n        });\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n\n    //removes song from user's library\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id);\n    };\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').service('spotifyService', function($http, $q, $cookies, loginService) {\n    //looks up ids of provided elements and\n    //gets recommendations accordingly\n    var token;\n    this.getRecs = function(artist, song, genre) {\n        token = loginService.getToken();\n        console.log(artist + \" \" + song + \" \" + genre);\n        var songInfo;\n        var artistInfo;\n        var deferred = $q.defer();\n\n        //gets track ID and info\n        search(song, \"track\").then(function(songRes) {\n            console.log(songRes);\n            songInfo = songRes;\n            //gets artist ID and info\n            search(artist, \"artist\").then(function(artistRes) {\n                console.log(artistRes);\n                artistInfo = artistRes;\n                //gets recommendations\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/recommendations?seed_tracks=' + songInfo.id + '&seed_artists=' + artistInfo.id + '&seed_genres=' + genre\n                }).then(function(response) {\n                    var recommendationsWithInfo = {};\n                    console.log(response);\n                    //array of recommendations with info about each one\n                    var recArray = [];\n                    var recommendations = response.data.tracks;\n                    recommendations.forEach(function(rec) {\n                        var name = rec.name;\n                        search(name, \"track\").then(function(info) {\n                            recArray.push(info);\n                        });\n                    });\n                    recommendationsWithInfo.data = recArray;\n                    deferred.resolve(recommendationsWithInfo);\n                });\n            });\n        });\n        return deferred.promise;\n    };\n\n    //gets a provided song/artists id, name,\n    //popularity and an assosciated image\n    var search = function(searchTerm, type) {\n        var defer = $q.defer();\n\n        $http({\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/search?q=' + encodeURI(searchTerm) + \"&type=\" + type\n        }).then(function(result) {\n            // console.log(result);\n\n            var info = {\n                id: result.data[type + 's'].items[0].id,\n                uri: \"https://embed.spotify.com/?uri=\" + result.data[type + 's'].items[0].uri,\n                popularity: result.data[type + 's'].items[0].popularity,\n            };\n            if (result.data[type + 's'].items[0].name.length > 22) {\n                info.name = shorten(result.data[type + 's'].items[0].name);\n            } else {\n                info.name = result.data[type + 's'].items[0].name;\n            }\n            if (type === 'artist') {\n                info.image = result.data.artists.items[0].images[0].url;\n            } else {\n                info.albumId = result.data.tracks.items[0].album.id;\n                info.albumImg = result.data.tracks.items[0].album.images[0].url;\n                info.preview = result.data.tracks.items[0].preview_url;\n                info.artistInfo = {\n                    name: result.data.tracks.items[0].artists[0].name,\n                    id: result.data.tracks.items[0].artists[0].id\n                };\n                //get specific stats about each song.\n                getInfo(info.id).then(function(result) {\n                    info.acoutsticness = result.acoutsticness;\n                    info.danceability = result.danceability;\n                    info.energy = result.energy;\n                    info.instrumentalness = result.instrumentalness;\n                    info.key = result.key;\n                    info.tempo = result.tempo;\n                }).then(function(result){\n                  checkIfAlreadySaved(info.id).then(function(result){\n                      info.alreadySaved = result;\n                      console.log(info.alreadySaved);\n                  });\n                });\n            }\n            defer.resolve(info);\n        });\n        return defer.promise;\n    };\n\n\n    //gets detailed statistics about and individual song\n    var getInfo = function(songID) {\n        var defer = $q.defer();\n        $http({\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/audio-features/' + songID\n        }).then(function(res) {\n            defer.resolve({\n                acousticness: res.data.acousticness,\n                danceability: res.data.danceability,\n                energy: res.data.energy,\n                instrumentalness: res.data.instrumentalness,\n                key: res.data.key,\n                tempo: res.data.tempo\n            });\n        });\n        return defer.promise;\n    };\n\n    //saves track to your library\n    this.saveTrack = function(id) {\n      token = loginService.getToken();\n      var defer = $q.defer();\n\n      $http({\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeTrack = function(id){\n      token = loginService.getToken();\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.saveAlbum = function(id){\n      token = loginService.getToken();\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'PUT',\n        url: 'https://api.spotify.com/v1/me/albums?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeAlbum = function(id){\n      token = loginService.getToken();\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/albums?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    //checks if song is already saved to user's library\n    var checkIfAlreadySaved = function(id){\n        var defer = $q.defer();\n        $http({\n          headers: {\n            'Authorization' : 'Bearer ' + token\n          },\n          method: 'GET',\n          url:'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n        }).then(function(result){\n          defer.resolve(result.data[0]);\n        });\n        return defer.promise;\n    };\n\n\n\n    //shortesn song titles that are too long\n    this.shorten = function(str) {\n        var arr = str.split(\"\");\n        var res = [];\n        for (var i = 0; i < 22; i++) {\n            res.push(arr[i]);\n        }\n        res.push('...');\n        return res.join('');\n    };\n\n    var shorten = this.shorten;\n});\n","angular.module('spotifyApp').controller('searchController', function($scope, searchService, loginService, spotifyService) {\n    $scope.hideLabels = true;\n\n    \n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n    $scope.getToken();\n\n    $scope.search = function(term) {\n        searchService.search(term).then(function(result) {\n            console.log(result);\n            $scope.hideLabels = false;\n            $scope.result = result;\n            console.log($scope.result);\n        });\n    };\n\n    $scope.removeSong = function(id) {\n        spotifyService.removeTrack(id);\n    };\n\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n});\n","angular.module('spotifyApp').service('searchService', function($http, $q, spotifyService, loginService) {\n    var searchRes = {};\n    var token = loginService.getToken();\n    this.search = function(term) {\n        var defer = $q.defer();\n        $http({\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/search?q=' + term + '&type=artist,album,track'\n        }).then(function(result) {\n            searchRes.tracks = result.data.tracks;\n            searchRes.albums = [];\n            searchRes.artists = [];\n\n            //checks that artist has a photo\n            for (var i = 0; i < result.data.artists.items.length; i++) {\n                if (result.data.artists.items[i].images.length > 0) {\n                    searchRes.artists.push(result.data.artists.items[i]);\n                }\n            }\n\n            //checks artist name length\n            for (var x = 0; x < searchRes.artists.length; x++) {\n                if (searchRes.artists[x].name.length > 20) {\n                    searchRes.artists[x].name = spotifyService.shorten(searchRes.artists[x].name);\n                }\n            }\n\n            //checks all albums have a photo\n            for (var y = 0; y < result.data.albums.items.length; y++) {\n                if (result.data.albums.items[y].images.length > 0) {\n                    searchRes.albums.push(result.data.albums.items[y]);\n                }\n            }\n\n            //checks album name length\n            for (var d = 0; d < searchRes.albums.length; d++) {\n                if (searchRes.albums[d].name.length > 18) {\n                    searchRes.albums[d].name = spotifyService.shorten(searchRes.albums[d].name);\n                }\n            }\n\n            //checks songs album name length\n            for (var l = 0; l < searchRes.tracks.items.length; l++) {\n                if (searchRes.tracks.items[l].album.name.length > 18) {\n                    searchRes.tracks.items[l].album.name = spotifyService.shorten(searchRes.tracks.items[l].album.name);\n                }\n            }\n\n            //checks if song is saved\n            for (var a = 0; a < searchRes.tracks.items.length; a++) {\n                checkSong(searchRes.tracks.items[a].id, a);\n            }\n\n        });\n\n        defer.resolve(searchRes);\n        return defer.promise;\n    };\n\n    var checkSong = function(id, index) {\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n        }).then(function(res) {\n            searchRes.tracks.items[index].alreadySaved = res.data[0];\n        });\n    };\n\n});\n"]}