{"version":3,"sources":["app.js","filter.js","timeFilter.js","artist/artistController.js","artist/artistService.js","album/albumController.js","album/albumService.js","login/authController.js","login/loginController.js","login/loginService.js","library/libraryCtrl.js","library/libraryService.js","recommendations/animations.js","recommendations/recommendationController.js","recommendations/service.js","navbar/navbar.js","search/searchController.js","search/searchService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$cookiesProvider","defaults","path","filter","$sce","val","trustAsResourceUrl","s","ms","secs","mins","hrs","$scope","$stateParams","artistService","spotifyService","artistId","id","console","log","getArtistInfo","then","result","artistInfo","follow","followArtist","unfollow","unfollowArtist","saveSong","saveTrack","removeSong","removeTrack","service","$http","$q","loginService","token","getToken","image","undefined","defer","artistID","headers","method","genres","data","popularity","name","i","images","length","height","width","res","alreadyFollowing","response","topTracks","tracks","forEach","track","checkIfSongSaved","alreadySaved","r","albumArr","items","album_type","push","albums","x","getTracksOnAlbum","resolve","promise","index","trackList","albumService","albumId","getAlbum","getAlbumInfo","albumInfo","saveAlbum","removeAlbum","artist","artists","releaseDate","release_date","checkIfTrackSaved","$cookies","window","location","hash","substr","elems","split","setToken","setTimeout","redirect_uri","authorize","resp","client_id","isLoggedIn","encodeURIComponent","now","Date","time","getTime","setTime","put","get","libraryService","library","getLib","getLibrary","getRecommendations","getRecs","artistName","songName","genreName","recs","recommendations","song","genre","songInfo","deferred","search","songRes","artistRes","recommendationsWithInfo","recArray","rec","info","searchTerm","type","encodeURI","uri","shorten","album","albumImg","preview","preview_url","getInfo","acoutsticness","danceability","energy","instrumentalness","key","tempo","checkIfAlreadySaved","songID","acousticness","str","arr","join","directive","restrict","searchService","hideLabels","term","searchRes","y","d","l","a","checkSong"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('spotifyApp', ['ngCookies', 'ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        //search state\n        $stateProvider.state('recommendations', {\n                url: '/recommendations',\n                templateUrl: '/components/recommendations/recommendTmpl.html',\n                controller: 'recommendationController'\n            })\n            //login state\n            .state('login', {\n                url: '/',\n                templateUrl: '/components/login/login.html',\n                controller: 'loginController'\n            })\n\n            .state('artist', {\n                url:'/artist/:id',\n                templateUrl: '/components/artist/artistTmpl.html',\n                controller: 'artistController'\n            })\n\n            .state('album', {\n                url:'/album/:id',\n                templateUrl: '/components/album/albumTmpl.html',\n                controller:'albumController'\n            })\n\n            .state('search', {\n                url:'/search',\n                templateUrl: '/components/search/searchTmpl.html',\n                controller: 'searchController'\n            })\n\n            .state('library', {\n                url:'/library',\n                templateUrl:'/components/library/libraryTmpl.html',\n                controller:'libraryController'\n            });\n\n        $urlRouterProvider.otherwise('/');\n\n    }).config(['$cookiesProvider', function($cookiesProvider) {\n        //makes token accessible for the whole app\n        $cookiesProvider.defaults.path = '/';\n    }]);\n","//filter to make iframes work with dynamic urls (for the spotify web player)\n//and for some images\nangular.module('spotifyApp').filter('trustAsResourceUrl', ['$sce', function($sce) {\n    return function(val) {\n        return $sce.trustAsResourceUrl(val);\n    };\n}]);\n","angular.module('spotifyApp').filter('timeFilter',function(){\n\n    return function (s) {\n        var ms = s % 1000;\n        s = (s - ms) / 1000;\n        var secs = s % 60;\n        s = (s - secs) / 60;\n        var mins = s % 60;\n        var hrs = (s - mins) / 60;\n        if(secs < 10){\n          secs = secs + '0';\n        }\n        return mins + ':' + secs;\n    };\n});\n","angular.module('spotifyApp').controller('artistController', function($scope, $stateParams, artistService, spotifyService) {\n    $scope.artistId = $stateParams.id;\n    console.log($scope.artistId);\n    //gets artist info\n    artistService.getArtistInfo($scope.artistId).then(function(result) {\n        $scope.artistInfo = result;\n        console.log($scope.artistInfo);\n    });\n\n    //follows artist\n    $scope.follow = function() {\n        artistService.followArtist($scope.artistId);\n    };\n\n\n    //unfollows artist\n    $scope.unfollow = function() {\n        artistService.unfollowArtist($scope.artistId);\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n\n    //removes saved song from user's library\n    $scope.removeSong = function(id) {\n        spotifyService.removeTrack(id);\n    };\n\n});\n","angular.module('spotifyApp').service('artistService', function($http, $q, loginService) {\n    var token = loginService.getToken();\n    var artistInfo = {};\n    //gets artist info from spotify\n    this.getArtistInfo = function(id) {\n        //gets basic artist info\n        artistInfo.image = undefined;\n        var defer = $q.defer();\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/artists/' + id\n        }).then(function(result) {\n            artistInfo.genres = result.data.genres;\n            artistInfo.popularity = result.data.popularity;\n            artistInfo.name = result.data.name;\n            //gets biggest square image\n            for (var i = result.data.images.length - 1; i >= 0; i--) {\n                if (result.data.images[i].height === result.data.images[i].width) {\n                    artistInfo.image = result.data.images[i];\n                }\n            }\n        }).then(function() {\n            //gets if a user follows an artist\n            $http({\n                headers: {\n                    \"Authorization\": 'Bearer ' + token\n                },\n                method: 'GET',\n                url: 'https://api.spotify.com/v1/me/following/contains?type=artist&ids=' + artistID\n            }).then(function(res) {\n                artistInfo.alreadyFollowing = res.data[0];\n            }).then(function() {\n                //gets an artist's top tracks\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/artists/' + artistID + '/top-tracks?country=US'\n                }).then(function(response) {\n                    artistInfo.topTracks = response.data.tracks;\n                    artistInfo.topTracks.forEach(function(track) {\n                        //checks if a user already\n                        checkIfSongSaved(track.id).then(function(result) {\n                            track.alreadySaved = result.data[0];\n                        });\n                    });\n                }).then(function() {\n                    //gets an artist's albums\n                    $http({\n                        headers: {\n                            \"Authorization\": 'Bearer ' + token\n                        },\n                        method: 'GET',\n                        url: 'https://api.spotify.com/v1/artists/' + artistID + '/albums?country=US'\n                    }).then(function(r) {\n                        // console.log(r);\n                        var albumArr = [];\n                        //filters out singles and compilations\n                        for (var i = 0; i < r.data.items.length; i++) {\n                            if (r.data.items[i].album_type === 'album') {\n                                albumArr.push(r.data.items[i]);\n                            }\n                        }\n                        artistInfo.albums = albumArr;\n                        console.log(artistInfo.albums);\n                        //request to get all tracks from each album\n                        for (var x = 0; x < artistInfo.albums.length; x++) {\n                            getTracksOnAlbum(artistInfo.albums[x].id, x);\n                        }\n\n                        //if there were no sqaure images from the artist\n                        //profile, it sets the artists most recent album as\n                        //the profile photo.\n                        if (!artistInfo.image) {\n                            artistInfo.image = r.data.items[0].images[0];\n                        }\n                    });\n                });\n            });\n        });\n        defer.resolve(artistInfo);\n        // console.log(artistInfo);\n        return defer.promise;\n    };\n\n    //follows artist with given id\n    this.followArtist = function(id) {\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            console.log(res);\n        });\n    };\n\n    //unfollows artist with given id\n    this.unfollowArtist = function(id) {\n        var artistID = id;\n        // console.log(`artistID ${artistID}`);\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'DELETE',\n            url: 'https://api.spotify.com/v1/me/following?type=artist&ids=' + artistID\n        }).then(function(res) {\n            //console.log(res);\n        });\n    };\n\n    //checks if a song is already saved to a user's library\n    var checkIfSongSaved = function(id) {\n        var artistID = id;\n        return $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/me/tracks/contains?ids=' + artistID\n        });\n    };\n\n    //gets tracks on album with given id, made it a separate\n    //function to break scope\n    var getTracksOnAlbum = function(id, index) {\n        var artistID = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/albums/' + artistID\n        }).then(function(trackList) {\n            artistInfo.albums[index].tracks = trackList.data.tracks;\n        });\n    };\n\n});\n","angular.module('spotifyApp').controller('albumController', function($scope, $stateParams, albumService, spotifyService) {\n    $scope.albumId = $stateParams.id;\n    $scope.getAlbum = function() {\n        albumService.getAlbumInfo($scope.albumId).then(function(response) {\n            $scope.albumInfo = response;\n        });\n    };\n\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n\n    $scope.removeSong = function(id) {\n        spotifyService.removeTrack(id);\n    };\n\n    $scope.saveAlbum = function(id) {\n        spotifyService.saveAlbum(id);\n    };\n\n    $scope.removeAlbum = function(id) {\n        spotifyService.removeAlbum(id);\n    };\n    $scope.getAlbum();\n\n\n});\n","angular.module('spotifyApp').service('albumService', function($http, $q, loginService) {\n    var token = loginService.getToken();\n    var albumInfo = {};\n\n    this.getAlbumInfo = function(id) {\n        //gets basic album info\n        var defer = $q.defer();\n\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/albums/' + id\n        }).then(function(res) {\n            albumInfo.artist = res.data.artists[0];\n            albumInfo.image = res.data.images[0].url;\n            albumInfo.name = res.data.name;\n            albumInfo.releaseDate = res.data.release_date;\n            albumInfo.tracks = res.data.tracks.items;\n        }).then(function() {\n            //checks if album has been saved\n            $http({\n                headers: {\n                    \"Authorization\": 'Bearer ' + token\n                },\n                method: 'GET',\n                url: 'https://api.spotify.com/v1/me/albums/contains?ids=' + id\n            }).then(function(result) {\n                //checks if each song has been saved\n                albumInfo.alreadySaved = result.data[0];\n                for (var x = 0; x < albumInfo.tracks.length; x++) {\n                    checkIfTrackSaved(albumInfo.tracks[x].id, x);\n                }\n            });\n        });\n        defer.resolve(albumInfo);\n        console.log(albumInfo);\n        return defer.promise;\n    };\n\n    //checks if track with given id has ben saved\n    var checkIfTrackSaved = function(id, index) {\n        var track = id;\n        $http({\n            headers: {\n                \"Authorization\": 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/me/tracks/contains?ids=' + track\n        }).then(function(result) {\n            albumInfo.tracks[index].alreadySaved = result.data[0];\n        });\n    };\n});\n","angular.module('spotifyApp').controller('authController', function($scope, loginService, $cookies) {\n\n    //method to extract token from redirect url\n    $scope.getToken = function() {\n        var url = window.location.hash.substr(1);\n        var elems = url.split('=');\n        console.log(elems);\n        console.log(elems[1].split('&'));\n        $scope.token = (elems[1]);\n    };\n\n    //gets token from url\n    $scope.getToken();\n\n    //sets token\n    loginService.setToken($scope.token);\n\n    //redirects home after 1s\n    setTimeout(function() {\n        window.location = 'http://localhost:8080/#/search';\n    }, 1000);\n\n});\n","angular.module('spotifyApp').controller('loginController', function($scope, loginService) {\n    var redirect_uri = 'http://localhost:8080/components/login/afterAuth.html';\n    //redirects to spotify permission request\n    $scope.authorize = function() {\n        loginService.authorize().then(function(resp) {\n            window.location = \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\";\n        });\n    };\n    loginService.getToken();\n    $scope.isLoggedIn = loginService.isLoggedIn;\n    if($scope.isLoggedIn){\n      window.location = \"http://localhost:8080/#/recommendations\";\n    }\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/components/login/afterAuth.html');\n\nangular.module('spotifyApp').service('loginService', function($cookies, $http) {\n    this.isLoggedIn = false;\n    //requests auth token from spotify\n    this.authorize = function() {\n        return $http({\n            method: 'GET',\n            url: \"https://accounts.spotify.com/authorize?client_id=\" + client_id + \"&redirect_uri=\" + redirect_uri + \"&scope=user-library-modify%20user-top-read%20user-library-read%20user-follow-modify%20user-follow-read&response_type=token\"\n        });\n    };\n\n    //save token to a cookie that expires in 1hr\n    this.setToken = function(token){\n      var now = new Date();\n      var time = now.getTime();\n      time += 3600 * 1000;\n      now.setTime(time);\n      $cookies.put('token', token, {'expires': now});\n      console.log(token);\n      this.token = token;\n      this.isLoggedIn = true;\n    };\n\n    //gets token from a cookie\n    this.getToken = function() {\n        var token = $cookies.get('token');\n        console.log(token);\n        if(token){\n          this.isLoggedIn = true;\n        }else{\n          this.isLoggedIn = false;\n        }\n        return token;\n    };\n});\n","angular.module('spotifyApp').controller('libraryController', function($scope, libraryService){\n    $scope.library = {};\n    $scope.library.items = [];\n    $scope.getLib = function(){\n      libraryService.getLibrary().then(function(result){\n        $scope.library = result.data;\n        console.log($scope.library);\n      });\n    };\n    $scope.getLib();\n});\n","angular.module('spotifyApp').service('libraryService', function($http, spotifyService, loginService){\n  var token = loginService.getToken();\n\n  this.getLibrary = function(){\n    return $http({\n      headers: {\n          \"Authorization\": 'Bearer ' + token\n      },\n      method: 'GET',\n      url: 'https://api.spotify.com/v1/me/tracks'\n    });\n  };\n});\n","","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').controller('recommendationController', function($scope, spotifyService, loginService) {\n\n    //gets token from saved coookie\n    $scope.getToken = function() {\n        $scope.token = loginService.getToken();\n\n        //redirects if user not logged in\n        if(!$scope.token){\n          window.location='/';\n        }\n    };\n\n    //gets saved token when page is loaded\n    $scope.getToken();\n\n    //gets recommendations based on seeds\n    $scope.getRecommendations = function() {\n        spotifyService.getRecs($scope.artistName, $scope.songName, $scope.genreName).then(function(recs) {\n            console.log(recs);\n            $scope.recommendations = recs.data;\n        });\n    };\n\n    //saves song to user's library\n    $scope.saveSong = function(id) {\n        spotifyService.saveTrack(id);\n    };\n\n    //removes song from user's library\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id);\n    };\n});\n","var client_id = '9307698323d44b158135c48936a25dbf';\nvar redirect_uri = encodeURIComponent('http://localhost:8080/afterAuth.html');\n\nangular.module('spotifyApp').service('spotifyService', function($http, $q, $cookies, loginService) {\n    //looks up ids of provided elements and\n    //gets recommendations accordingly\n    var token;\n    this.getRecs = function(artist, song, genre) {\n        token = loginService.getToken();\n        console.log(artist + \" \" + song + \" \" + genre);\n        var songInfo;\n        var artistInfo;\n        var deferred = $q.defer();\n\n        //gets track ID and info\n        search(song, \"track\").then(function(songRes) {\n            console.log(songRes);\n            songInfo = songRes;\n            //gets artist ID and info\n            search(artist, \"artist\").then(function(artistRes) {\n                console.log(artistRes);\n                artistInfo = artistRes;\n                //gets recommendations\n                $http({\n                    headers: {\n                        \"Authorization\": 'Bearer ' + token\n                    },\n                    method: 'GET',\n                    url: 'https://api.spotify.com/v1/recommendations?seed_tracks=' + songInfo.id + '&seed_artists=' + artistInfo.id + '&seed_genres=' + genre\n                }).then(function(response) {\n                    var recommendationsWithInfo = {};\n                    console.log(response);\n                    //array of recommendations with info about each one\n                    var recArray = [];\n                    var recommendations = response.data.tracks;\n                    recommendations.forEach(function(rec) {\n                        var name = rec.name;\n                        search(name, \"track\").then(function(info) {\n                            recArray.push(info);\n                        });\n                    });\n                    recommendationsWithInfo.data = recArray;\n                    deferred.resolve(recommendationsWithInfo);\n                });\n            });\n        });\n        return deferred.promise;\n    };\n\n    //gets a provided song/artists id, name,\n    //popularity and an assosciated image\n    var search = function(searchTerm, type) {\n        var defer = $q.defer();\n\n        $http({\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/search?q=' + encodeURI(searchTerm) + \"&type=\" + type\n        }).then(function(result) {\n            // console.log(result);\n\n            var info = {\n                id: result.data[type + 's'].items[0].id,\n                uri: \"https://embed.spotify.com/?uri=\" + result.data[type + 's'].items[0].uri,\n                popularity: result.data[type + 's'].items[0].popularity,\n            };\n            if (result.data[type + 's'].items[0].name.length > 22) {\n                info.name = shorten(result.data[type + 's'].items[0].name);\n            } else {\n                info.name = result.data[type + 's'].items[0].name;\n            }\n            if (type === 'artist') {\n                info.image = result.data.artists.items[0].images[0].url;\n            } else {\n                info.albumId = result.data.tracks.items[0].album.id;\n                info.albumImg = result.data.tracks.items[0].album.images[0].url;\n                info.preview = result.data.tracks.items[0].preview_url;\n                info.artistInfo = {\n                    name: result.data.tracks.items[0].artists[0].name,\n                    id: result.data.tracks.items[0].artists[0].id\n                };\n                //get specific stats about each song.\n                getInfo(info.id).then(function(result) {\n                    info.acoutsticness = result.acoutsticness;\n                    info.danceability = result.danceability;\n                    info.energy = result.energy;\n                    info.instrumentalness = result.instrumentalness;\n                    info.key = result.key;\n                    info.tempo = result.tempo;\n                }).then(function(result){\n                  checkIfAlreadySaved(info.id).then(function(result){\n                      info.alreadySaved = result;\n                      console.log(info.alreadySaved);\n                  });\n                });\n            }\n            defer.resolve(info);\n        });\n        return defer.promise;\n    };\n\n\n    //gets detailed statistics about and individual song\n    var getInfo = function(songID) {\n        var defer = $q.defer();\n        $http({\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'GET',\n            url: 'https://api.spotify.com/v1/audio-features/' + songID\n        }).then(function(res) {\n            defer.resolve({\n                acousticness: res.data.acousticness,\n                danceability: res.data.danceability,\n                energy: res.data.energy,\n                instrumentalness: res.data.instrumentalness,\n                key: res.data.key,\n                tempo: res.data.tempo\n            });\n        });\n        return defer.promise;\n    };\n\n    //saves track to your library\n    this.saveTrack = function(id) {\n      token = loginService.getToken();\n      var defer = $q.defer();\n\n      $http({\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            method: 'PUT',\n            url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeTrack = function(id){\n      token = loginService.getToken();\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/tracks?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.saveAlbum = function(id){\n      token = loginService.getToken();\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'PUT',\n        url: 'https://api.spotify.com/v1/me/albums?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    this.removeAlbum = function(id){\n      token = loginService.getToken();\n      $http({\n        headers: {\n          'Authorization' : 'Bearer ' + token\n        },\n        method: 'DELETE',\n        url: 'https://api.spotify.com/v1/me/albums?ids=' + id\n      }).then(function(result){\n        console.log(result.data);\n      });\n    };\n\n    //checks if song is already saved to user's library\n    var checkIfAlreadySaved = function(id){\n        var defer = $q.defer();\n        $http({\n          headers: {\n            'Authorization' : 'Bearer ' + token\n          },\n          method: 'GET',\n          url:'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n        }).then(function(result){\n          defer.resolve(result.data[0]);\n        });\n        return defer.promise;\n    };\n\n\n\n    //shortesn song titles that are too long\n    this.shorten = function(str) {\n        var arr = str.split(\"\");\n        var res = [];\n        for (var i = 0; i < 22; i++) {\n            res.push(arr[i]);\n        }\n        res.push('...');\n        return res.join('');\n    };\n\n    var shorten = this.shorten;\n});\n","angular.module('spotifyApp').directive('navBar', function(){\n  return {\n    restrict:'E',\n    templateUrl:'/components/navbar/navbarTmpl.html'\n  };\n});\n","angular.module('spotifyApp').controller('searchController', function($scope, searchService, spotifyService){\n    $scope.hideLabels = true;\n    $scope.search = function(term){\n      searchService.search(term).then(function(result){\n        console.log(result);\n        $scope.hideLabels = false;\n        $scope.result = result;\n        console.log($scope.result);\n      });\n    };\n\n    $scope.removeSong = function(id){\n      spotifyService.removeTrack(id);\n    };\n\n    $scope.saveSong = function(id){\n      spotifyService.saveTrack(id);\n    };\n});\n","angular.module('spotifyApp').service('searchService', function($http, $q, spotifyService, loginService){\n  var searchRes = {};\n  var token = loginService.getToken();\n  this.search = function(term){\n    var defer = $q.defer();\n    $http({\n      method: 'GET',\n      url:'https://api.spotify.com/v1/search?q=' + term + '&type=artist,album,track'\n    }).then(function(result){\n      searchRes.tracks = result.data.tracks;\n      searchRes.albums = [];\n      searchRes.artists = [];\n\n      //checks that artist has a photo\n      for(var i = 0; i < result.data.artists.items.length; i++){\n        if(result.data.artists.items[i].images.length > 0){\n          searchRes.artists.push(result.data.artists.items[i]);\n        }\n      }\n\n      //checks artist name length\n      for(var x = 0; x < searchRes.artists.length; x++){\n        if(searchRes.artists[x].name.length > 20){\n          searchRes.artists[x].name = spotifyService.shorten(searchRes.artists[x].name);\n        }\n      }\n\n      //checks all albums have a photo\n      for(var y = 0; y < result.data.albums.items.length; y++){\n        if(result.data.albums.items[y].images.length > 0){\n          searchRes.albums.push(result.data.albums.items[y]);\n        }\n      }\n\n      //checks album name length\n      for(var d = 0; d < searchRes.albums.length; d++){\n        if(searchRes.albums[d].name.length > 18){\n          searchRes.albums[d].name = spotifyService.shorten(searchRes.albums[d].name);\n        }\n      }\n\n      //checks songs album name length\n      for(var l = 0; l < searchRes.tracks.items.length; l++){\n        if(searchRes.tracks.items[l].album.name.length > 18){\n          searchRes.tracks.items[l].album.name = spotifyService.shorten(searchRes.tracks.items[l].album.name);\n        }\n      }\n\n      //checks if song is saved\n      for (var a = 0; a < searchRes.tracks.items.length; a++) {\n          checkSong(searchRes.tracks.items[a].id, a);\n      }\n\n    });\n\n    defer.resolve(searchRes);\n    return defer.promise;\n  };\n\n  var checkSong = function(id, index) {\n      $http({\n          headers: {\n              \"Authorization\": 'Bearer ' + token\n          },\n          method: 'GET',\n          url: 'https://api.spotify.com/v1/me/tracks/contains?ids=' + id\n      }).then(function(res){\n          searchRes.tracks.items[index].alreadySaved = res.data[0];\n      });\n  };\n\n});\n"]}